// Code generated by go-enum
// DO NOT EDIT!

package generations

import (
	"fmt"
)

const (
	// GenderUnknown is a Gender of type Unknown
	GenderUnknown Gender = iota
	// GenderMale is a Gender of type Male
	GenderMale
	// GenderFemale is a Gender of type Female
	GenderFemale
)

const _GenderName = "unknownmalefemale"

var _GenderMap = map[Gender]string{
	0: _GenderName[0:7],
	1: _GenderName[7:11],
	2: _GenderName[11:17],
}

// String implements the Stringer interface.
func (x Gender) String() string {
	if str, ok := _GenderMap[x]; ok {
		return str
	}
	return fmt.Sprintf("Gender(%d)", x)
}

var _GenderValue = map[string]Gender{
	_GenderName[0:7]:   0,
	_GenderName[7:11]:  1,
	_GenderName[11:17]: 2,
}

// ParseGender attempts to convert a string to a Gender
func ParseGender(name string) (Gender, error) {
	if x, ok := _GenderValue[name]; ok {
		return x, nil
	}
	return Gender(0), fmt.Errorf("%s is not a valid Gender", name)
}
